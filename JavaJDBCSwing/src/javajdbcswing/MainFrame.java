/*
 * Copyright (C) 2016 CodeFireUA <edu@codefire.com.ua>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package javajdbcswing;

import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javajdbcswing.db.JFrameDAO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author CodeFireUA <edu@codefire.com.ua>
 */
public class MainFrame extends javax.swing.JFrame {

    private JFrameDAO frameDAO;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();

        setLocationRelativeTo(null);
    }

    private void refreshDatabases() {
        if (frameDAO != null) {
            try {
                Object[] databaseArray = frameDAO.getDatabaseList().toArray();

                jcbDatabases.setModel(new DefaultComboBoxModel(databaseArray));
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlTables = new javax.swing.JList<>();
        jbShowTables = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcbDatabases = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtData = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiNewConnection = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jmiExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlTables.setEnabled(false);
        jlTables.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlTablesMouseClicked(evt);
            }
        });
        jlTables.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlTablesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jlTables);

        jbShowTables.setText("Show tables");
        jbShowTables.setEnabled(false);
        jbShowTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowTablesActionPerformed(evt);
            }
        });

        jLabel1.setText("Select database:");

        jcbDatabases.setEnabled(false);

        jLabel2.setText("Tables");

        jLabel3.setText("Data");

        jtData.setAutoCreateRowSorter(true);
        jtData.setEnabled(false);
        jtData.setShowGrid(true);
        jScrollPane2.setViewportView(jtData);

        jmFile.setText("File");

        jmiNewConnection.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jmiNewConnection.setText("New connection...");
        jmiNewConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNewConnectionActionPerformed(evt);
            }
        });
        jmFile.add(jmiNewConnection);
        jmFile.add(jSeparator2);

        jmiExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jmFile.add(jmiExit);

        jMenuBar1.add(jmFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbDatabases, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbShowTables))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbDatabases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jbShowTables))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbShowTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowTablesActionPerformed

        String databaseName = jcbDatabases.getSelectedItem().toString();

        try {
            List<String> tableList = frameDAO.getTableList(databaseName);

            DefaultListModel dlm = new DefaultListModel();

            for (String tableName : tableList) {
                dlm.addElement(tableName);
            }

            jlTables.setModel(dlm);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbShowTablesActionPerformed

    private void jlTablesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlTablesMouseClicked

        if (evt.getClickCount() == 2) {
            evt.consume();

            showTable();
        }

    }//GEN-LAST:event_jlTablesMouseClicked

    private void showTable() {
        if (jlTables.getSelectedIndex() >= 0) {
            String databaseName = jcbDatabases.getSelectedItem().toString();
            String tableName = jlTables.getSelectedValue();

            try {
                TableModel tableModel = frameDAO.getTableModel(databaseName, tableName);
                jtData.setModel(tableModel);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void jlTablesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlTablesKeyPressed

        showTable();

    }//GEN-LAST:event_jlTablesKeyPressed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed

        int response = JOptionPane.showConfirmDialog(this, "You are sure want exit?", "Exit",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JFileChooser.APPROVE_OPTION) {
            dispose();
        }

    }//GEN-LAST:event_jmiExitActionPerformed

    private void jmiNewConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewConnectionActionPerformed

        NewConnectionFrame connectionFrame = new NewConnectionFrame(this);
        connectionFrame.setLocationRelativeTo(this);
        connectionFrame.setVisible(true);

    }//GEN-LAST:event_jmiNewConnectionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    public void updateDao(JFrameDAO dao) {
        this.frameDAO = dao;
        
        refreshDatabases();
        
        jcbDatabases.setEnabled(true);
        jbShowTables.setEnabled(true);
        jlTables.setEnabled(true);
        jtData.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton jbShowTables;
    private javax.swing.JComboBox<String> jcbDatabases;
    private javax.swing.JList<String> jlTables;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiNewConnection;
    private javax.swing.JTable jtData;
    // End of variables declaration//GEN-END:variables
}
